version: '3.8'

services:
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongodb:27017/fincoach-auth
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ISSUER=fincoach-plus
      - JWT_AUDIENCE=fincoach-users
    depends_on:
      - mongodb
    networks:
      - fincoach-network
    restart: unless-stopped

  profile-service:
    build:
      context: ./services/profile-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongodb:27017/fincoach-profile
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - mongodb
    networks:
      - fincoach-network
    restart: unless-stopped

  calendar-service:
    build:
      context: ./services/calendar-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongodb:27017/fincoach-calendar
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - mongodb
    networks:
      - fincoach-network
    restart: unless-stopped

  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - fincoach-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - fincoach-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - fincoach-network
    restart: unless-stopped

networks:
  fincoach-network:
    driver: bridge

volumes:
  mongodb_data:
  prometheus_data:
  grafana_data: 